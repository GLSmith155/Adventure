TestCase subclass: #CommandTest	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Tests-Core'!!CommandTest methodsFor: 'tests'!testGivenLookCommandWhenExecutedGameSentLookWithNoArguments	| command fake |	command := Command parse: 'look'.	command executeInGame: (fake := GameFake new).	self assert: fake commandsSent equals: 1.	self assert: fake lastCommandSent equals: #look.	self assert: fake lastArguments equals: #(  )! !!CommandTest methodsFor: 'tests'!testGivenGoCommandWhenExecutedGameSentGoWithDirection	| command fake |	command := Command parse: 'go north'.	command executeInGame: (fake := GameFake new).	self assert: fake commandsSent equals: 1.	self assert: fake lastCommandSent  equals: #go:.	self assert: fake lastArguments  equals: #( 'north' )! !Object subclass: #GameFake	instanceVariableNames: 'commandsSent lastCommandSent lastArguments'	classVariableNames: ''	package: 'CPSC3220-Adventure-Tests-Core'!!GameFake methodsFor: 'actions'!look	commandsSent := commandsSent + 1.	lastCommandSent := #look.	lastArguments := #()! !!GameFake methodsFor: 'actions'!go: aDirection	commandsSent := commandsSent + 1.	lastCommandSent := #go:.	lastArguments := Array with: aDirection! !!GameFake methodsFor: 'initialization'!initialize	super initialize.	commandsSent := 0.	lastCommandSent := nil.	lastArguments := nil! !!GameFake methodsFor: 'accessing'!commandsSent	^commandsSent! !!GameFake methodsFor: 'accessing'!lastArguments	^ lastArguments! !!GameFake methodsFor: 'accessing'!lastCommandSent	^lastCommandSent! !TestCase subclass: #GameTest	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Tests-Core'!!GameTest methodsFor: 'tests'!testWhenLookExecutedThenStartRoomDescriptionIncluded	| description location game result |	location := Location new description: (description := 'neverland'); yourself.	game := Game startLocation: location.	result := game executeCommand: (Command parse: 'look').	self assert: (result includesSubstring: description)! !!GameTest methodsFor: 'tests'!testWhenGoExecutedThenDestinationRoomDescriptionIncluded	|  location game result endDescription endLocation |	location := Location new		            description: 'neverland';		            yourself.	endLocation := Location new		               description: (endDescription := 'Mermaid place');		               yourself.	location addExit: endLocation direction: 'east'.	game := Game startLocation: location.	result := game executeCommand: (Command parse: 'go east').	self assert: (result includesSubstring: endDescription)! !TestCase subclass: #LocationTest	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Tests-Core'!!LocationTest methodsFor: 'tests'!testExitInDirectionWithUnknownDirectionException	| location |	location := Location new.	self should:[location exitInDirection: 'north'] raise: UnknownDirection.! !!LocationTest methodsFor: 'tests'!testGivenALocationWithDescriptionWhenGettingDescriptionThenCorrectValueReturned	| l description |	(l := Location new) description: (description := 'here').	self assert: l description equals: description! !!LocationTest methodsFor: 'tests'!testGivenALocationWhenAddingExitsNoError	Location new		addExit: Location new direction: 'north'.! !!LocationTest methodsFor: 'tests'!testGivenALocationWithExitQueryExitInDirectionThenCorrectExitReturned	| southRoom northRoom |	southRoom := Location new.	northRoom := Location new.	southRoom addExit: northRoom direction: 'north'.		self assert: (southRoom exitInDirection: 'north') equals: northRoom! !!LocationTest methodsFor: 'tests'!testGivenALocationWithExitsWhenExitsListedThenAllExitDirectionsReturned	| southRoom  |	southRoom := Location new.	southRoom addExit: Location new direction: 'north'.	southRoom addExit: Location new direction: 'south'.	self assert: southRoom exitNames equals: (Set with: 'north' with: 'south').! !TestCase subclass: #PlayerTest	instanceVariableNames: ''	classVariableNames: ''	package: 'CPSC3220-Adventure-Tests-Core'!!PlayerTest methodsFor: 'tests'!testGivenStartLocationWhenGoThenInNewLocation	| startLocation endDescription endLocation player |	startLocation := Location new description: 'start'; yourself.	endLocation := Location new description: (endDescription := 'end'); yourself.	startLocation addExit: endLocation direction: 'up'.	player := Player location: startLocation.	player go: 'up'.	self assert: (player look includesSubstring: endDescription)! !!PlayerTest methodsFor: 'tests'!testGivenStartLocationWhenLookThenResultIncludesExitNames	|  location player direction1 direction2 |	location := Location new		            description: 'north room';		            yourself.	location		addExit: Location new direction: (direction1 := 'up');		addExit: Location new direction: (direction2 := 'sideways').	player := Player location: location.	self assert: (player look includesSubstring: direction1).	self assert: (player look includesSubstring: direction2)! !!PlayerTest methodsFor: 'tests'!testGivenStartLocationWhenLookThenResultIncludesLocationDescription	| description location player |	location := Location new description: (description := 'north room'); yourself.	player := Player location: location.	self assert: (player look includesSubstring: description)! !